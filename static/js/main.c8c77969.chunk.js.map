{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyPressed","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"iPAGaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,EAaEC,MAAQ,SAACA,GACP,EAAKC,SAAS,CACZF,WAAYC,EAAME,OAfxB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKL,SAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,SAV/C,oBAmBE,WACE,IAAQD,EAAeM,KAAKP,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIR,EAEI,qCACE,2DACA,sBAAMQ,UAAU,WAAhB,SAA4BR,OAG9B,kCAjChB,GAAyBS,IAAMC,W,MCE/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c8c77969.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    keyPressed: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.event);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.event);\n  }\n\n  event = (event: KeyboardEvent) => {\n    this.setState({\n      keyPressed: event.key,\n    });\n  };\n\n  render() {\n    const { keyPressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            keyPressed\n              ? (\n                <>\n                  <span>The last pressed key is</span>\n                  <span className=\"App__key\">{keyPressed}</span>\n                </>\n              )\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}